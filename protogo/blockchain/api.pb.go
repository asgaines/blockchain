// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/api.proto

package blockchain

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Block struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Prevhash             []byte               `protobuf:"bytes,2,opt,name=prevhash,proto3" json:"prevhash,omitempty"`
	Nonce                uint64               `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Target               []byte               `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	MerkleRoot           []byte               `protobuf:"bytes,5,opt,name=merkleRoot,proto3" json:"merkleRoot,omitempty"`
	Txs                  []*Tx                `protobuf:"bytes,6,rep,name=txs,proto3" json:"txs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{0}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Block) GetPrevhash() []byte {
	if m != nil {
		return m.Prevhash
	}
	return nil
}

func (m *Block) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Block) GetTarget() []byte {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Block) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *Block) GetTxs() []*Tx {
	if m != nil {
		return m.Txs
	}
	return nil
}

type Chain struct {
	Blocks               []*Block `protobuf:"bytes,1,rep,name=blocks,proto3" json:"blocks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chain) Reset()         { *m = Chain{} }
func (m *Chain) String() string { return proto.CompactTextString(m) }
func (*Chain) ProtoMessage()    {}
func (*Chain) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{1}
}

func (m *Chain) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chain.Unmarshal(m, b)
}
func (m *Chain) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chain.Marshal(b, m, deterministic)
}
func (m *Chain) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chain.Merge(m, src)
}
func (m *Chain) XXX_Size() int {
	return xxx_messageInfo_Chain.Size(m)
}
func (m *Chain) XXX_DiscardUnknown() {
	xxx_messageInfo_Chain.DiscardUnknown(m)
}

var xxx_messageInfo_Chain proto.InternalMessageInfo

func (m *Chain) GetBlocks() []*Block {
	if m != nil {
		return m.Blocks
	}
	return nil
}

type NodeID struct {
	// pubkey is the public key of the client
	Pubkey string `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// id is the unique identifier of a node within a pool; a collection of nodes
	// mining for the same pubkey
	Id int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// returnAddr is the path back to the requesting peer so the responding peer
	// can connect back. Current methods for discovering request ip not reliable within
	// Docker container
	ReturnAddr           string   `protobuf:"bytes,3,opt,name=returnAddr,proto3" json:"returnAddr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeID) Reset()         { *m = NodeID{} }
func (m *NodeID) String() string { return proto.CompactTextString(m) }
func (*NodeID) ProtoMessage()    {}
func (*NodeID) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{2}
}

func (m *NodeID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeID.Unmarshal(m, b)
}
func (m *NodeID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeID.Marshal(b, m, deterministic)
}
func (m *NodeID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeID.Merge(m, src)
}
func (m *NodeID) XXX_Size() int {
	return xxx_messageInfo_NodeID.Size(m)
}
func (m *NodeID) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeID.DiscardUnknown(m)
}

var xxx_messageInfo_NodeID proto.InternalMessageInfo

func (m *NodeID) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *NodeID) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *NodeID) GetReturnAddr() string {
	if m != nil {
		return m.ReturnAddr
	}
	return ""
}

type Tx struct {
	// timestamp is the moment the tx was generated
	Timestamp *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// value is the amount of credit being transferred
	Value float64 `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	// sender is the public key of the payer, the one giving credit
	Sender string `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	// recipient is the public key of the payee, the one receiving credit
	Recipient string `protobuf:"bytes,4,opt,name=recipient,proto3" json:"recipient,omitempty"`
	// message is an optional field to describe or provide metadata for the transaction
	Message string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	// hash is the sha256 hash of the pertinent fields of the transaction
	Hash                 []byte   `protobuf:"bytes,6,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tx) Reset()         { *m = Tx{} }
func (m *Tx) String() string { return proto.CompactTextString(m) }
func (*Tx) ProtoMessage()    {}
func (*Tx) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{3}
}

func (m *Tx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tx.Unmarshal(m, b)
}
func (m *Tx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tx.Marshal(b, m, deterministic)
}
func (m *Tx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tx.Merge(m, src)
}
func (m *Tx) XXX_Size() int {
	return xxx_messageInfo_Tx.Size(m)
}
func (m *Tx) XXX_DiscardUnknown() {
	xxx_messageInfo_Tx.DiscardUnknown(m)
}

var xxx_messageInfo_Tx proto.InternalMessageInfo

func (m *Tx) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Tx) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Tx) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

func (m *Tx) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *Tx) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Tx) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type DiscoverRequest struct {
	NodeID *NodeID `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	// peerAddrs is the collection of addresses of known nodes.
	// They can be used to further discover more peers
	KnownAddrs           []string `protobuf:"bytes,2,rep,name=knownAddrs,proto3" json:"knownAddrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoverRequest) Reset()         { *m = DiscoverRequest{} }
func (m *DiscoverRequest) String() string { return proto.CompactTextString(m) }
func (*DiscoverRequest) ProtoMessage()    {}
func (*DiscoverRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{4}
}

func (m *DiscoverRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoverRequest.Unmarshal(m, b)
}
func (m *DiscoverRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoverRequest.Marshal(b, m, deterministic)
}
func (m *DiscoverRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverRequest.Merge(m, src)
}
func (m *DiscoverRequest) XXX_Size() int {
	return xxx_messageInfo_DiscoverRequest.Size(m)
}
func (m *DiscoverRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverRequest proto.InternalMessageInfo

func (m *DiscoverRequest) GetNodeID() *NodeID {
	if m != nil {
		return m.NodeID
	}
	return nil
}

func (m *DiscoverRequest) GetKnownAddrs() []string {
	if m != nil {
		return m.KnownAddrs
	}
	return nil
}

type DiscoverResponse struct {
	NodeID *NodeID `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	// ok signifies to the pinger that it is ok to connect with and share
	// new tx and block solve propagations
	Ok bool `protobuf:"varint,2,opt,name=ok,proto3" json:"ok,omitempty"`
	// peerAddrs is the collection of addresses of other known nodes.
	// They can be used to further discover more peers
	KnownAddrs           []string `protobuf:"bytes,3,rep,name=knownAddrs,proto3" json:"knownAddrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DiscoverResponse) Reset()         { *m = DiscoverResponse{} }
func (m *DiscoverResponse) String() string { return proto.CompactTextString(m) }
func (*DiscoverResponse) ProtoMessage()    {}
func (*DiscoverResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{5}
}

func (m *DiscoverResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DiscoverResponse.Unmarshal(m, b)
}
func (m *DiscoverResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DiscoverResponse.Marshal(b, m, deterministic)
}
func (m *DiscoverResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DiscoverResponse.Merge(m, src)
}
func (m *DiscoverResponse) XXX_Size() int {
	return xxx_messageInfo_DiscoverResponse.Size(m)
}
func (m *DiscoverResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DiscoverResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DiscoverResponse proto.InternalMessageInfo

func (m *DiscoverResponse) GetNodeID() *NodeID {
	if m != nil {
		return m.NodeID
	}
	return nil
}

func (m *DiscoverResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *DiscoverResponse) GetKnownAddrs() []string {
	if m != nil {
		return m.KnownAddrs
	}
	return nil
}

type GetStateRequest struct {
	NodeID               *NodeID  `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateRequest) Reset()         { *m = GetStateRequest{} }
func (m *GetStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetStateRequest) ProtoMessage()    {}
func (*GetStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{6}
}

func (m *GetStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateRequest.Unmarshal(m, b)
}
func (m *GetStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateRequest.Marshal(b, m, deterministic)
}
func (m *GetStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateRequest.Merge(m, src)
}
func (m *GetStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetStateRequest.Size(m)
}
func (m *GetStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateRequest proto.InternalMessageInfo

func (m *GetStateRequest) GetNodeID() *NodeID {
	if m != nil {
		return m.NodeID
	}
	return nil
}

type GetStateResponse struct {
	Chain                *Chain   `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Difficulty           float64  `protobuf:"fixed64,2,opt,name=difficulty,proto3" json:"difficulty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateResponse) Reset()         { *m = GetStateResponse{} }
func (m *GetStateResponse) String() string { return proto.CompactTextString(m) }
func (*GetStateResponse) ProtoMessage()    {}
func (*GetStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{7}
}

func (m *GetStateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateResponse.Unmarshal(m, b)
}
func (m *GetStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateResponse.Marshal(b, m, deterministic)
}
func (m *GetStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateResponse.Merge(m, src)
}
func (m *GetStateResponse) XXX_Size() int {
	return xxx_messageInfo_GetStateResponse.Size(m)
}
func (m *GetStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateResponse proto.InternalMessageInfo

func (m *GetStateResponse) GetChain() *Chain {
	if m != nil {
		return m.Chain
	}
	return nil
}

func (m *GetStateResponse) GetDifficulty() float64 {
	if m != nil {
		return m.Difficulty
	}
	return 0
}

type ShareChainRequest struct {
	NodeID               *NodeID  `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Chain                *Chain   `protobuf:"bytes,2,opt,name=chain,proto3" json:"chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShareChainRequest) Reset()         { *m = ShareChainRequest{} }
func (m *ShareChainRequest) String() string { return proto.CompactTextString(m) }
func (*ShareChainRequest) ProtoMessage()    {}
func (*ShareChainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{8}
}

func (m *ShareChainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareChainRequest.Unmarshal(m, b)
}
func (m *ShareChainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareChainRequest.Marshal(b, m, deterministic)
}
func (m *ShareChainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareChainRequest.Merge(m, src)
}
func (m *ShareChainRequest) XXX_Size() int {
	return xxx_messageInfo_ShareChainRequest.Size(m)
}
func (m *ShareChainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareChainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShareChainRequest proto.InternalMessageInfo

func (m *ShareChainRequest) GetNodeID() *NodeID {
	if m != nil {
		return m.NodeID
	}
	return nil
}

func (m *ShareChainRequest) GetChain() *Chain {
	if m != nil {
		return m.Chain
	}
	return nil
}

type ShareChainResponse struct {
	Accepted             bool     `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShareChainResponse) Reset()         { *m = ShareChainResponse{} }
func (m *ShareChainResponse) String() string { return proto.CompactTextString(m) }
func (*ShareChainResponse) ProtoMessage()    {}
func (*ShareChainResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{9}
}

func (m *ShareChainResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareChainResponse.Unmarshal(m, b)
}
func (m *ShareChainResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareChainResponse.Marshal(b, m, deterministic)
}
func (m *ShareChainResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareChainResponse.Merge(m, src)
}
func (m *ShareChainResponse) XXX_Size() int {
	return xxx_messageInfo_ShareChainResponse.Size(m)
}
func (m *ShareChainResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareChainResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShareChainResponse proto.InternalMessageInfo

func (m *ShareChainResponse) GetAccepted() bool {
	if m != nil {
		return m.Accepted
	}
	return false
}

type ShareTxRequest struct {
	NodeID               *NodeID  `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Tx                   *Tx      `protobuf:"bytes,2,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShareTxRequest) Reset()         { *m = ShareTxRequest{} }
func (m *ShareTxRequest) String() string { return proto.CompactTextString(m) }
func (*ShareTxRequest) ProtoMessage()    {}
func (*ShareTxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{10}
}

func (m *ShareTxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareTxRequest.Unmarshal(m, b)
}
func (m *ShareTxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareTxRequest.Marshal(b, m, deterministic)
}
func (m *ShareTxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareTxRequest.Merge(m, src)
}
func (m *ShareTxRequest) XXX_Size() int {
	return xxx_messageInfo_ShareTxRequest.Size(m)
}
func (m *ShareTxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareTxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShareTxRequest proto.InternalMessageInfo

func (m *ShareTxRequest) GetNodeID() *NodeID {
	if m != nil {
		return m.NodeID
	}
	return nil
}

func (m *ShareTxRequest) GetTx() *Tx {
	if m != nil {
		return m.Tx
	}
	return nil
}

type ShareTxResponse struct {
	Accepted             bool     `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Info                 string   `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShareTxResponse) Reset()         { *m = ShareTxResponse{} }
func (m *ShareTxResponse) String() string { return proto.CompactTextString(m) }
func (*ShareTxResponse) ProtoMessage()    {}
func (*ShareTxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{11}
}

func (m *ShareTxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShareTxResponse.Unmarshal(m, b)
}
func (m *ShareTxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShareTxResponse.Marshal(b, m, deterministic)
}
func (m *ShareTxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShareTxResponse.Merge(m, src)
}
func (m *ShareTxResponse) XXX_Size() int {
	return xxx_messageInfo_ShareTxResponse.Size(m)
}
func (m *ShareTxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShareTxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShareTxResponse proto.InternalMessageInfo

func (m *ShareTxResponse) GetAccepted() bool {
	if m != nil {
		return m.Accepted
	}
	return false
}

func (m *ShareTxResponse) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

type GetCreditRequest struct {
	NodeID               *NodeID  `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Pubkey               string   `protobuf:"bytes,2,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCreditRequest) Reset()         { *m = GetCreditRequest{} }
func (m *GetCreditRequest) String() string { return proto.CompactTextString(m) }
func (*GetCreditRequest) ProtoMessage()    {}
func (*GetCreditRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{12}
}

func (m *GetCreditRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCreditRequest.Unmarshal(m, b)
}
func (m *GetCreditRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCreditRequest.Marshal(b, m, deterministic)
}
func (m *GetCreditRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCreditRequest.Merge(m, src)
}
func (m *GetCreditRequest) XXX_Size() int {
	return xxx_messageInfo_GetCreditRequest.Size(m)
}
func (m *GetCreditRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCreditRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCreditRequest proto.InternalMessageInfo

func (m *GetCreditRequest) GetNodeID() *NodeID {
	if m != nil {
		return m.NodeID
	}
	return nil
}

func (m *GetCreditRequest) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

type GetCreditResponse struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCreditResponse) Reset()         { *m = GetCreditResponse{} }
func (m *GetCreditResponse) String() string { return proto.CompactTextString(m) }
func (*GetCreditResponse) ProtoMessage()    {}
func (*GetCreditResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{13}
}

func (m *GetCreditResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCreditResponse.Unmarshal(m, b)
}
func (m *GetCreditResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCreditResponse.Marshal(b, m, deterministic)
}
func (m *GetCreditResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCreditResponse.Merge(m, src)
}
func (m *GetCreditResponse) XXX_Size() int {
	return xxx_messageInfo_GetCreditResponse.Size(m)
}
func (m *GetCreditResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCreditResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCreditResponse proto.InternalMessageInfo

func (m *GetCreditResponse) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*Block)(nil), "blockchain.Block")
	proto.RegisterType((*Chain)(nil), "blockchain.Chain")
	proto.RegisterType((*NodeID)(nil), "blockchain.NodeID")
	proto.RegisterType((*Tx)(nil), "blockchain.Tx")
	proto.RegisterType((*DiscoverRequest)(nil), "blockchain.DiscoverRequest")
	proto.RegisterType((*DiscoverResponse)(nil), "blockchain.DiscoverResponse")
	proto.RegisterType((*GetStateRequest)(nil), "blockchain.GetStateRequest")
	proto.RegisterType((*GetStateResponse)(nil), "blockchain.GetStateResponse")
	proto.RegisterType((*ShareChainRequest)(nil), "blockchain.ShareChainRequest")
	proto.RegisterType((*ShareChainResponse)(nil), "blockchain.ShareChainResponse")
	proto.RegisterType((*ShareTxRequest)(nil), "blockchain.ShareTxRequest")
	proto.RegisterType((*ShareTxResponse)(nil), "blockchain.ShareTxResponse")
	proto.RegisterType((*GetCreditRequest)(nil), "blockchain.GetCreditRequest")
	proto.RegisterType((*GetCreditResponse)(nil), "blockchain.GetCreditResponse")
}

func init() { proto.RegisterFile("proto/api.proto", fileDescriptor_ecf0878b123623e2) }

var fileDescriptor_ecf0878b123623e2 = []byte{
	// 707 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x95, 0x9d, 0x47, 0xe3, 0x5b, 0x94, 0xb4, 0xa3, 0x0a, 0x59, 0xee, 0x83, 0xc8, 0x1b, 0x52,
	0x16, 0x09, 0xa4, 0x1b, 0x36, 0x2c, 0xfa, 0x12, 0x20, 0x24, 0x84, 0xa6, 0x11, 0x0b, 0x1e, 0x8b,
	0x89, 0x3d, 0x49, 0x46, 0x49, 0x66, 0x8c, 0x67, 0x5c, 0xd2, 0x3f, 0xe3, 0x27, 0xf8, 0x16, 0x7e,
	0x01, 0x79, 0x3c, 0xb1, 0x9d, 0xa4, 0x05, 0x11, 0x76, 0xbe, 0xf7, 0x9e, 0x7b, 0xee, 0x99, 0x33,
	0x77, 0x64, 0x68, 0x45, 0xb1, 0x50, 0xa2, 0x47, 0x22, 0xd6, 0xd5, 0x5f, 0x08, 0x86, 0x33, 0x11,
	0x4c, 0x83, 0x09, 0x61, 0xdc, 0x3b, 0x1a, 0x0b, 0x31, 0x9e, 0xd1, 0xb4, 0xda, 0x23, 0x9c, 0x0b,
	0x45, 0x14, 0x13, 0x5c, 0x66, 0x48, 0xef, 0x89, 0xa9, 0xea, 0x68, 0x98, 0x8c, 0x7a, 0x8a, 0xcd,
	0xa9, 0x54, 0x64, 0x1e, 0x65, 0x00, 0xff, 0xa7, 0x05, 0xb5, 0x8b, 0x94, 0x0d, 0xbd, 0x04, 0x27,
	0x2f, 0xba, 0x56, 0xdb, 0xea, 0xec, 0xf6, 0xbd, 0x6e, 0xd6, 0xde, 0x5d, 0xb6, 0x77, 0x07, 0x4b,
	0x04, 0x2e, 0xc0, 0xc8, 0x83, 0x46, 0x14, 0xd3, 0xdb, 0x09, 0x91, 0x13, 0xd7, 0x6e, 0x5b, 0x9d,
	0x47, 0x38, 0x8f, 0xd1, 0x01, 0xd4, 0xb8, 0xe0, 0x01, 0x75, 0x2b, 0x6d, 0xab, 0x53, 0xc5, 0x59,
	0x80, 0x1e, 0x43, 0x5d, 0x91, 0x78, 0x4c, 0x95, 0x5b, 0xd5, 0x78, 0x13, 0xa1, 0x13, 0x80, 0x39,
	0x8d, 0xa7, 0x33, 0x8a, 0x85, 0x50, 0x6e, 0x4d, 0xd7, 0x4a, 0x19, 0xd4, 0x86, 0x8a, 0x5a, 0x48,
	0xb7, 0xde, 0xae, 0x74, 0x76, 0xfb, 0xcd, 0x6e, 0x61, 0x43, 0x77, 0xb0, 0xc0, 0x69, 0xc9, 0xef,
	0x43, 0xed, 0x32, 0x4d, 0xa0, 0x53, 0xa8, 0xeb, 0xb2, 0x74, 0x2d, 0x8d, 0xde, 0x2f, 0xa3, 0xf5,
	0x89, 0xb1, 0x01, 0xf8, 0x1f, 0xa0, 0xfe, 0x5e, 0x84, 0xf4, 0xed, 0x55, 0xaa, 0x2b, 0x4a, 0x86,
	0x53, 0x7a, 0xa7, 0x0d, 0x70, 0xb0, 0x89, 0x50, 0x13, 0x6c, 0x16, 0xea, 0xb3, 0xd5, 0xb0, 0xcd,
	0xc2, 0x54, 0x67, 0x4c, 0x55, 0x12, 0xf3, 0xf3, 0x30, 0x8c, 0xf5, 0xd1, 0x1c, 0x5c, 0xca, 0xf8,
	0x3f, 0x2c, 0xb0, 0x07, 0x8b, 0xff, 0xb0, 0xf4, 0x00, 0x6a, 0xb7, 0x64, 0x96, 0x50, 0x3d, 0xd3,
	0xc2, 0x59, 0x90, 0xca, 0x93, 0x94, 0x87, 0x74, 0x39, 0xd2, 0x44, 0xe8, 0x08, 0x9c, 0x98, 0x06,
	0x2c, 0x62, 0x94, 0x67, 0x8e, 0x3a, 0xb8, 0x48, 0x20, 0x17, 0x76, 0xe6, 0x54, 0x4a, 0x32, 0xa6,
	0xda, 0x51, 0x07, 0x2f, 0x43, 0x84, 0xa0, 0xaa, 0x2f, 0xad, 0xae, 0x8d, 0xd6, 0xdf, 0xfe, 0x57,
	0x68, 0x5d, 0x31, 0x19, 0x88, 0x5b, 0x1a, 0x63, 0xfa, 0x2d, 0xa1, 0x52, 0xa1, 0x67, 0x50, 0xe7,
	0xda, 0x1f, 0x73, 0x06, 0x54, 0xb6, 0x32, 0x73, 0x0e, 0x1b, 0x44, 0xea, 0xcc, 0x94, 0x8b, 0xef,
	0xda, 0x06, 0xe9, 0xda, 0xed, 0x4a, 0xea, 0x4c, 0x91, 0xf1, 0x39, 0xec, 0x15, 0xf4, 0x32, 0x12,
	0x5c, 0xd2, 0x7f, 0xe2, 0x6f, 0x82, 0x2d, 0xa6, 0xda, 0x95, 0x06, 0xb6, 0xc5, 0x74, 0x6d, 0x5e,
	0x65, 0x63, 0xde, 0x2b, 0x68, 0xbd, 0xa6, 0xea, 0x46, 0x11, 0x45, 0xb7, 0x38, 0x8e, 0xff, 0x19,
	0xf6, 0x8a, 0x76, 0x23, 0xf7, 0x29, 0xd4, 0x34, 0xd6, 0xb4, 0xaf, 0x2c, 0x96, 0xde, 0x3d, 0x9c,
	0xd5, 0x53, 0x6d, 0x21, 0x1b, 0x8d, 0x58, 0x90, 0xcc, 0xd4, 0x9d, 0xb9, 0xc9, 0x52, 0xc6, 0x9f,
	0xc0, 0xfe, 0xcd, 0x84, 0xc4, 0x34, 0x6b, 0xda, 0xc2, 0xec, 0x5c, 0x89, 0xfd, 0x67, 0x25, 0xfe,
	0x73, 0x40, 0xe5, 0x49, 0xe6, 0x20, 0x1e, 0x34, 0x48, 0x10, 0xd0, 0x48, 0xd1, 0x50, 0x0f, 0x6b,
	0xe0, 0x3c, 0xf6, 0xbf, 0x40, 0x53, 0x77, 0x0c, 0x16, 0xdb, 0x6d, 0x81, 0xad, 0x16, 0x46, 0xd5,
	0xfa, 0x33, 0xb5, 0xd5, 0xc2, 0x3f, 0x87, 0x56, 0xce, 0xfe, 0x77, 0x31, 0xe9, 0x9e, 0x32, 0x3e,
	0x12, 0x9a, 0xd0, 0xc1, 0xfa, 0xdb, 0xff, 0xa8, 0x6f, 0xe6, 0x32, 0xa6, 0x21, 0x53, 0xdb, 0x48,
	0x2c, 0x9e, 0xba, 0x5d, 0x7e, 0xea, 0xfe, 0x29, 0xec, 0x97, 0x78, 0x8d, 0xb8, 0xfc, 0x39, 0x5a,
	0xa5, 0xe7, 0xd8, 0xff, 0x65, 0x43, 0x35, 0x65, 0x45, 0xd7, 0xd0, 0x58, 0x2e, 0x35, 0x3a, 0x2c,
	0xcf, 0x5c, 0x7b, 0x49, 0xde, 0xd1, 0xfd, 0x45, 0x33, 0xe5, 0x1a, 0x1a, 0xcb, 0x65, 0x5b, 0xa5,
	0x59, 0xdb, 0xe0, 0x55, 0x9a, 0x8d, 0xfd, 0x7c, 0x07, 0x50, 0x5c, 0x36, 0x3a, 0x2e, 0x63, 0x37,
	0xd6, 0xcd, 0x3b, 0x79, 0xa8, 0x6c, 0xc8, 0x2e, 0x60, 0xc7, 0xdc, 0x14, 0xf2, 0x36, 0xa0, 0xf9,
	0x72, 0x78, 0x87, 0xf7, 0xd6, 0x0c, 0xc7, 0x1b, 0x70, 0x72, 0x4b, 0xd1, 0xba, 0xf6, 0x95, 0x1b,
	0xf4, 0x8e, 0x1f, 0xa8, 0x66, 0x4c, 0x17, 0x67, 0x9f, 0x5e, 0x8c, 0x99, 0x9a, 0x24, 0xc3, 0x6e,
	0x20, 0xe6, 0x3d, 0x22, 0xc7, 0x84, 0x71, 0x2a, 0x7b, 0x45, 0x4f, 0xf6, 0xa3, 0x1b, 0x8b, 0x52,
	0x6a, 0x58, 0xd7, 0xb9, 0xb3, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x14, 0x43, 0xf3, 0xa2, 0x47,
	0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeClient is the client API for Node service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeClient interface {
	Discover(ctx context.Context, in *DiscoverRequest, opts ...grpc.CallOption) (*DiscoverResponse, error)
	GetState(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*GetStateResponse, error)
	ShareChain(ctx context.Context, in *ShareChainRequest, opts ...grpc.CallOption) (*ShareChainResponse, error)
	ShareTx(ctx context.Context, in *ShareTxRequest, opts ...grpc.CallOption) (*ShareTxResponse, error)
	GetCredit(ctx context.Context, in *GetCreditRequest, opts ...grpc.CallOption) (*GetCreditResponse, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) Discover(ctx context.Context, in *DiscoverRequest, opts ...grpc.CallOption) (*DiscoverResponse, error) {
	out := new(DiscoverResponse)
	err := c.cc.Invoke(ctx, "/blockchain.Node/Discover", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetState(ctx context.Context, in *GetStateRequest, opts ...grpc.CallOption) (*GetStateResponse, error) {
	out := new(GetStateResponse)
	err := c.cc.Invoke(ctx, "/blockchain.Node/GetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) ShareChain(ctx context.Context, in *ShareChainRequest, opts ...grpc.CallOption) (*ShareChainResponse, error) {
	out := new(ShareChainResponse)
	err := c.cc.Invoke(ctx, "/blockchain.Node/ShareChain", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) ShareTx(ctx context.Context, in *ShareTxRequest, opts ...grpc.CallOption) (*ShareTxResponse, error) {
	out := new(ShareTxResponse)
	err := c.cc.Invoke(ctx, "/blockchain.Node/ShareTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) GetCredit(ctx context.Context, in *GetCreditRequest, opts ...grpc.CallOption) (*GetCreditResponse, error) {
	out := new(GetCreditResponse)
	err := c.cc.Invoke(ctx, "/blockchain.Node/GetCredit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServer is the server API for Node service.
type NodeServer interface {
	Discover(context.Context, *DiscoverRequest) (*DiscoverResponse, error)
	GetState(context.Context, *GetStateRequest) (*GetStateResponse, error)
	ShareChain(context.Context, *ShareChainRequest) (*ShareChainResponse, error)
	ShareTx(context.Context, *ShareTxRequest) (*ShareTxResponse, error)
	GetCredit(context.Context, *GetCreditRequest) (*GetCreditResponse, error)
}

// UnimplementedNodeServer can be embedded to have forward compatible implementations.
type UnimplementedNodeServer struct {
}

func (*UnimplementedNodeServer) Discover(ctx context.Context, req *DiscoverRequest) (*DiscoverResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Discover not implemented")
}
func (*UnimplementedNodeServer) GetState(ctx context.Context, req *GetStateRequest) (*GetStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetState not implemented")
}
func (*UnimplementedNodeServer) ShareChain(ctx context.Context, req *ShareChainRequest) (*ShareChainResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShareChain not implemented")
}
func (*UnimplementedNodeServer) ShareTx(ctx context.Context, req *ShareTxRequest) (*ShareTxResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ShareTx not implemented")
}
func (*UnimplementedNodeServer) GetCredit(ctx context.Context, req *GetCreditRequest) (*GetCreditResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCredit not implemented")
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_Discover_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DiscoverRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).Discover(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Node/Discover",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).Discover(ctx, req.(*DiscoverRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Node/GetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetState(ctx, req.(*GetStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_ShareChain_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShareChainRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).ShareChain(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Node/ShareChain",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).ShareChain(ctx, req.(*ShareChainRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_ShareTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShareTxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).ShareTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Node/ShareTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).ShareTx(ctx, req.(*ShareTxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_GetCredit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCreditRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).GetCredit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Node/GetCredit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).GetCredit(ctx, req.(*GetCreditRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blockchain.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Discover",
			Handler:    _Node_Discover_Handler,
		},
		{
			MethodName: "GetState",
			Handler:    _Node_GetState_Handler,
		},
		{
			MethodName: "ShareChain",
			Handler:    _Node_ShareChain_Handler,
		},
		{
			MethodName: "ShareTx",
			Handler:    _Node_ShareTx_Handler,
		},
		{
			MethodName: "GetCredit",
			Handler:    _Node_GetCredit_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/api.proto",
}
