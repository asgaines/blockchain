// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/api.proto

package blockchain

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Tx struct {
	Value                float64  `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	For                  string   `protobuf:"bytes,2,opt,name=for,proto3" json:"for,omitempty"`
	From                 string   `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Tx) Reset()         { *m = Tx{} }
func (m *Tx) String() string { return proto.CompactTextString(m) }
func (*Tx) ProtoMessage()    {}
func (*Tx) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{0}
}

func (m *Tx) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tx.Unmarshal(m, b)
}
func (m *Tx) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tx.Marshal(b, m, deterministic)
}
func (m *Tx) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tx.Merge(m, src)
}
func (m *Tx) XXX_Size() int {
	return xxx_messageInfo_Tx.Size(m)
}
func (m *Tx) XXX_DiscardUnknown() {
	xxx_messageInfo_Tx.DiscardUnknown(m)
}

var xxx_messageInfo_Tx proto.InternalMessageInfo

func (m *Tx) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Tx) GetFor() string {
	if m != nil {
		return m.For
	}
	return ""
}

func (m *Tx) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Tx) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

type PingRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{1}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

func (m *PingRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type PingResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	Id                   int32    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{2}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

func (m *PingResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *PingResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type SubmitTxRequest struct {
	Tx                   *Tx      `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitTxRequest) Reset()         { *m = SubmitTxRequest{} }
func (m *SubmitTxRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitTxRequest) ProtoMessage()    {}
func (*SubmitTxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{3}
}

func (m *SubmitTxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTxRequest.Unmarshal(m, b)
}
func (m *SubmitTxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTxRequest.Marshal(b, m, deterministic)
}
func (m *SubmitTxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTxRequest.Merge(m, src)
}
func (m *SubmitTxRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitTxRequest.Size(m)
}
func (m *SubmitTxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTxRequest proto.InternalMessageInfo

func (m *SubmitTxRequest) GetTx() *Tx {
	if m != nil {
		return m.Tx
	}
	return nil
}

type SubmitTxResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitTxResponse) Reset()         { *m = SubmitTxResponse{} }
func (m *SubmitTxResponse) String() string { return proto.CompactTextString(m) }
func (*SubmitTxResponse) ProtoMessage()    {}
func (*SubmitTxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{4}
}

func (m *SubmitTxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitTxResponse.Unmarshal(m, b)
}
func (m *SubmitTxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitTxResponse.Marshal(b, m, deterministic)
}
func (m *SubmitTxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitTxResponse.Merge(m, src)
}
func (m *SubmitTxResponse) XXX_Size() int {
	return xxx_messageInfo_SubmitTxResponse.Size(m)
}
func (m *SubmitTxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitTxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitTxResponse proto.InternalMessageInfo

func (m *SubmitTxResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*Tx)(nil), "blockchain.Tx")
	proto.RegisterType((*PingRequest)(nil), "blockchain.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "blockchain.PingResponse")
	proto.RegisterType((*SubmitTxRequest)(nil), "blockchain.SubmitTxRequest")
	proto.RegisterType((*SubmitTxResponse)(nil), "blockchain.SubmitTxResponse")
}

func init() { proto.RegisterFile("proto/api.proto", fileDescriptor_ecf0878b123623e2) }

var fileDescriptor_ecf0878b123623e2 = []byte{
	// 298 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x31, 0x6f, 0xc2, 0x30,
	0x10, 0x85, 0x15, 0x03, 0x15, 0x3d, 0x2a, 0x40, 0x56, 0xa5, 0x46, 0x94, 0x56, 0x28, 0x13, 0x53,
	0x22, 0x60, 0xea, 0x8a, 0xd4, 0x1d, 0xb9, 0x4c, 0xdd, 0x1c, 0x30, 0xc6, 0x22, 0xf1, 0xa5, 0xb1,
	0x53, 0xe5, 0x57, 0xf4, 0x37, 0x57, 0x71, 0x80, 0x44, 0x2d, 0xdb, 0xe5, 0x7d, 0xef, 0x3d, 0xdf,
	0x29, 0x30, 0xca, 0x72, 0xb4, 0x18, 0xf1, 0x4c, 0x85, 0x6e, 0xa2, 0x10, 0x27, 0xb8, 0x3b, 0xed,
	0x8e, 0x5c, 0xe9, 0xc9, 0x54, 0x22, 0xca, 0x44, 0x54, 0x34, 0xe2, 0x5a, 0xa3, 0xe5, 0x56, 0xa1,
	0x36, 0xb5, 0x33, 0xd8, 0x00, 0xd9, 0x96, 0xf4, 0x11, 0x7a, 0xdf, 0x3c, 0x29, 0x84, 0xef, 0xcd,
	0xbc, 0xb9, 0xc7, 0xea, 0x0f, 0x3a, 0x86, 0xce, 0x01, 0x73, 0x9f, 0xcc, 0xbc, 0xf9, 0x3d, 0xab,
	0x46, 0x4a, 0xa1, 0x7b, 0xc8, 0x31, 0xf5, 0x3b, 0x4e, 0x72, 0x33, 0x1d, 0x02, 0xb1, 0xe8, 0x77,
	0x9d, 0x42, 0x2c, 0x06, 0x2f, 0x30, 0xd8, 0x28, 0x2d, 0x99, 0xf8, 0x2a, 0x84, 0xb1, 0x15, 0x56,
	0x7b, 0xd7, 0xdb, 0x63, 0x44, 0xed, 0x83, 0x10, 0x1e, 0x6a, 0x6c, 0x32, 0xd4, 0x46, 0x54, 0x1c,
	0x4f, 0x8e, 0xf7, 0x19, 0xc1, 0xd3, 0xd9, 0x4f, 0xae, 0xfe, 0x05, 0x8c, 0x3e, 0x8a, 0x38, 0x55,
	0x76, 0x5b, 0x5e, 0x2a, 0x5f, 0x81, 0xd8, 0xd2, 0x45, 0x06, 0xcb, 0x61, 0xd8, 0x9c, 0x1a, 0x6e,
	0x4b, 0x46, 0x6c, 0x19, 0x04, 0x30, 0x6e, 0x22, 0xb7, 0x9f, 0x59, 0xfe, 0x78, 0x00, 0xeb, 0x6b,
	0x92, 0xbe, 0x41, 0xb7, 0xda, 0x8a, 0x3e, 0xb5, 0xeb, 0x5a, 0x67, 0x4c, 0xfc, 0xff, 0xe0, 0xdc,
	0xfc, 0x0e, 0xfd, 0xcb, 0x6b, 0xf4, 0xb9, 0xed, 0xfa, 0xb3, 0xf6, 0x64, 0x7a, 0x1b, 0xd6, 0x35,
	0xeb, 0xd5, 0xe7, 0x42, 0x2a, 0x7b, 0x2c, 0xe2, 0x70, 0x87, 0x69, 0xc4, 0x8d, 0xe4, 0x4a, 0x0b,
	0x13, 0x35, 0x91, 0xc8, 0xfd, 0x30, 0x89, 0x2d, 0x29, 0xbe, 0x73, 0xda, 0xea, 0x37, 0x00, 0x00,
	0xff, 0xff, 0x04, 0x54, 0x7b, 0x3d, 0x01, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BlockchainClient is the client API for Blockchain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BlockchainClient interface {
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	SubmitTx(ctx context.Context, in *SubmitTxRequest, opts ...grpc.CallOption) (*SubmitTxResponse, error)
}

type blockchainClient struct {
	cc *grpc.ClientConn
}

func NewBlockchainClient(cc *grpc.ClientConn) BlockchainClient {
	return &blockchainClient{cc}
}

func (c *blockchainClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/blockchain.Blockchain/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *blockchainClient) SubmitTx(ctx context.Context, in *SubmitTxRequest, opts ...grpc.CallOption) (*SubmitTxResponse, error) {
	out := new(SubmitTxResponse)
	err := c.cc.Invoke(ctx, "/blockchain.Blockchain/SubmitTx", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BlockchainServer is the server API for Blockchain service.
type BlockchainServer interface {
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	SubmitTx(context.Context, *SubmitTxRequest) (*SubmitTxResponse, error)
}

// UnimplementedBlockchainServer can be embedded to have forward compatible implementations.
type UnimplementedBlockchainServer struct {
}

func (*UnimplementedBlockchainServer) Ping(ctx context.Context, req *PingRequest) (*PingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Ping not implemented")
}
func (*UnimplementedBlockchainServer) SubmitTx(ctx context.Context, req *SubmitTxRequest) (*SubmitTxResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitTx not implemented")
}

func RegisterBlockchainServer(s *grpc.Server, srv BlockchainServer) {
	s.RegisterService(&_Blockchain_serviceDesc, srv)
}

func _Blockchain_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Blockchain/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Blockchain_SubmitTx_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitTxRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BlockchainServer).SubmitTx(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/blockchain.Blockchain/SubmitTx",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BlockchainServer).SubmitTx(ctx, req.(*SubmitTxRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Blockchain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "blockchain.Blockchain",
	HandlerType: (*BlockchainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _Blockchain_Ping_Handler,
		},
		{
			MethodName: "SubmitTx",
			Handler:    _Blockchain_SubmitTx_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/api.proto",
}
