// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/asgaines/blockchain/mining (interfaces: Miner)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	mining "github.com/asgaines/blockchain/mining"
	blockchain "github.com/asgaines/blockchain/protogo/blockchain"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockMiner is a mock of Miner interface
type MockMiner struct {
	ctrl     *gomock.Controller
	recorder *MockMinerMockRecorder
}

// MockMinerMockRecorder is the mock recorder for MockMiner
type MockMinerMockRecorder struct {
	mock *MockMiner
}

// NewMockMiner creates a new mock instance
func NewMockMiner(ctrl *gomock.Controller) *MockMiner {
	mock := &MockMiner{ctrl: ctrl}
	mock.recorder = &MockMinerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMiner) EXPECT() *MockMinerMockRecorder {
	return m.recorder
}

// Mine mocks base method
func (m *MockMiner) Mine(arg0 context.Context, arg1 chan<- mining.BlockReport) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Mine", arg0, arg1)
}

// Mine indicates an expected call of Mine
func (mr *MockMinerMockRecorder) Mine(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Mine", reflect.TypeOf((*MockMiner)(nil).Mine), arg0, arg1)
}

// SetTarget mocks base method
func (m *MockMiner) SetTarget(arg0 float64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetTarget", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetTarget indicates an expected call of SetTarget
func (mr *MockMinerMockRecorder) SetTarget(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTarget", reflect.TypeOf((*MockMiner)(nil).SetTarget), arg0)
}

// SetTxs mocks base method
func (m *MockMiner) SetTxs(arg0 []*blockchain.Tx) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SetTxs", arg0)
}

// SetTxs indicates an expected call of SetTxs
func (mr *MockMinerMockRecorder) SetTxs(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTxs", reflect.TypeOf((*MockMiner)(nil).SetTxs), arg0)
}

// UpdatePrevHash mocks base method
func (m *MockMiner) UpdatePrevHash(arg0 []byte) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdatePrevHash", arg0)
}

// UpdatePrevHash indicates an expected call of UpdatePrevHash
func (mr *MockMinerMockRecorder) UpdatePrevHash(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdatePrevHash", reflect.TypeOf((*MockMiner)(nil).UpdatePrevHash), arg0)
}
